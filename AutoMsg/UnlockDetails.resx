<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDAwMSAwMDFgAAABAAAAAFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQMDA4ErKyvbVFRUwSgo
        KIYHBwdMBAQEEwkJCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASEhIAAAAAKVNT
        U9LJycn/vr6+/4aGhvA2NjasEBAQOXNzcwAGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIC
        AgAAAAAFKioqh8HBwf3/////+/v7/8rKyv5JSUnCAAAAHxISEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAsDAwNxq6ur/v///////////////6qqqvogICCFAAAAFwAAABgAAAAXAAAAGwAA
        ACcAAAAuAAAAMwAAAC8AAAAfAAAAEQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABwcHAAAAAAkUFBRaSkpKtV9fX+nIyMj+////////////////9PT0/4uLi/VfX1/nYGBg5GNj
        Y+JkZGTma2tr5nFxceZ2dnbldXV15WdnZ+VWVlbGISEhcgAAABUEBAQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAGhoaaX19fe7Y2Nj/+fn5//////////////////////////////////7+
        /v/6+vr/+vr6/////////////////////////////v7+/+bm5v+ZmZn7JCQkigAAAAkFBQUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAADg4OAAQEBCRbW1vI6Ojo////////////////////////////////////
        //////////////////////////////////////////////////////////////Pz8/90dHThBwcHOA8P
        DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw8ACAgITJeXl/X+/v7/////////////////////////
        /////////////////////////////////////////////////////////////////////////////52d
        nfwCAgJUCQkJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAABAQFWo6Oj////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////paWl/wAAAFoCAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFAAAAAFempqb/////////
        //////////////////////////////39/f/Jycn/hISE/39/f//CwsL//f39////////////////////
        //////////////////+jo6P/AAAAVwQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQAAAAAWKen
        p///////////////////////////////////////wMDA/3Jycv/CwsL/ysrK/3t7e/+1tbX/////////
        /////////////////////////////6Wlpf4BAQFiDw8PAAAAAAAAAAAAAAAAAAAAAAAJCQkABAQEAwQE
        BDUvLy+tv7+//v////////////////////////////////////+pqan/09PT////////////2NjY/46O
        jv/9/f3/////////////////////////////////1tbW/1NTU88bGxtyBQUFEAgICAAAAAAAAAAAAA8P
        DwAJCQk0VVVV0cPDw//6+vr///////////////////////////////////////j4+P/+/v7/////////
        ///9/f3/9PT0//7+/v//////////////////////////////////////6urq/3x8fPAJCQlHDw8PAAAA
        AAAAAAAADQ0NAAYGBlGampr6////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////o6Oj/wIC
        AlYJCQkAAAAAAAAAAAAFBQUAAAAAV6Ghof//////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        //+jo6P/AAAAVgcHBwAAAAAAAAAAAAUFBQAAAABXnZ2d//////////////////////////////////T0
        9P+lpaT/eXl3/7y8u//9/f3/////////////////z8/P/3x8e/+qqqn/+fn5////////////////////
        /////////////5ubm/cICAhODw8PAAAAAAAAAAAACwsLAAUFBUh6enrw8PDw////////////////////
        ////////urq5/3V1bv+zs6b/a2tn/+rq6v///////////+3t7f9ubmv/pqab/3l5cv/Dw8P/////////
        ///////////////////e3t7/Z2dn2woKCjMREREAAAAAAAAAAAAPDw8ACgoKESAgIHttbW3k2tra/v//
        //////////////////+6urr/dHRt/7a2qf9qamb/6enp////////////6urq/2dnY/+ysqX/eXly/7Ky
        sv//////////////////////39/f/mZmZtcPDw9bAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw4O
        DlmOjo7w+/v7//////////////////X19f+lpaT/d3d2/7a2tv/8/Pz////////////9/f3/vr6+/3Z2
        df+UlJP/6+vr//////////////////////+wsLD+Dw8PcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAASEhIACwsLRI2Nje37+/v/////////////////////////////////////////////////////////
        /////////////////////////////////////////////5+fn/8AAABYBQUFAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAwMDAAFBQVSnp6e+///////////////////////////////////////////////////
        ////////////////////////////////////////////////////////l5eX+AgICFAPDw8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAADAwMAAUFBVCYmJj5////////////////////////////////////////
        //////////////////////////////////////////////////////////////r6+v+IiIjrDAwMQhMT
        EwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODg4ABQUFJ1dXV8vZ2dn/////////////////////////
        ////////////////////////////////////////////////////////////////////////6urq/1ZW
        VsQAAAAfBQUFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEhISTFJSUsyUlJTxxsbG/t3d
        3f/k5OT/5OTk/+Tk5P/k5OT/4+Pj/+Pj4//l5eX/4uLi/+Li4v/i4uL/29vb/9ra2v/a2tr/29vb/9PT
        0/+Hh4fwGRkZdAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAHBYW
        FlQrKyuNKSkpoywsLKktLS2pLS0tqSwsLKgnJyemIyMjsB0dHdcmJialJSUlpikpKaQqKiqhKioqoSoq
        KqEqKiqhKysrnBcXF2IAAAAMAgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAQAAAAEAAAABAAAAAAAAAApAAAAlQAAAAgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAggAAQEEJwEMPbcBEFfyAQkvnwEA
        AAwBAggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDDAABAgdNABZ29gAe
        qf0BCji1AQAADwECCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEHAAAB
        BRQBByF9AQcjigACDigAAA8AAQMPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////wf///8B////gP///4B///8AAA/+AAAH/gAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPgAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/4AAAf/8I////8H////B////w///////8=
</value>
  </data>
</root>